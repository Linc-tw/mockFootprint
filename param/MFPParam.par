

    ##############################################
    ##  MFPParam.par				##
    ##  Parameter file for MFP v0.0		##
    ##############################################


## All contents after the first '#' of each line are ignored.
## Spaces, tabs, ',' and '=' are considered as delimiters.
## The maximum number of characters per line is 1023.
## Changing lines by '\' is NOT supported.
## Unknown keys will be warned.
## Missing keys will NOT be warned.

################################################################################
## 1. Generality

seed		random			## [int or string] Seed for generating random numbers
					##   If seed is int, suggested range = [0, 4294967295]
					##   Put anything containing 'r' for a random seed
verbose		0			## [int] 0 = default, 1 = all, 2 = no flush, 99 = silent

################################################################################
## 2. Input maps

nside		256			## [int] N_side of input maps
					##   Has to be a power of 2
N_z_map		-1			## [int] Number of redshift slices of maps
					##   Can be negative (see bin_z_map)
bin_z_map	0.2  0.8  0.2
					## [float array] Bin edge values for input map redshifts
					##   If N_z_map > 0, bin_z_map should have N_z_map + 1 values.
					##   If N_z_map < 0, the first 3 values are successively read as z_map_min, z_map_max, dz_map.
					##   Example:
					##     N_z_map    -1
					##     bin_z_map  0.2  1.0  0.1
					##   Example:
					##     N_z_map    4
					##     bin_z_map  0.1  0.4  0.65  0.85  1.0

denPrefix	../data/mockFootprint/anser/flask_denMap/denMap
					## [string] Prefix for input density maps

lenPrefix	../data/mockFootprint/anser/flask_lenMap/lenMap
					## [string] Prefix for input lensing maps

runTag		_run0
					## [string] Tag for identifying different runs
					##   Can be empty
					##   File names for density maps are "%s%s_f1z%d.fits" % (denPrefix, runTag, j).
					##   File names for lensing maps are "%s%s_f2z%d.fits" % (lenPrefix, runTag, j).

################################################################################
## 3. Selection functions

nbTypes		2			## [int] Number of types of galaxies
					##   Maximal value = 64

maskPath	0	../data/mockFootprint/anser/MFP_selection/mask_type0.fits
maskPath	1	../data/mockFootprint/anser/MFP_selection/mask_type1.fits
					## [1 int, 1 string] Index of type and path to mask for that type
					##   The index starts from 0 and should not exceed nbTypes-1.
					##   Have to be HEALPix maps in FITS format with the same nside
					##   Have to be put after nbTypes

nOfZPath	0	../data/mockFootprint/anser/MFP_selection/nOfZ_hist_type0.dat
nOfZPath	1	../data/mockFootprint/anser/MFP_selection/nOfZ_hist_type1.dat
					## [1 int, 1 string] Index of type and path to n(z) for that type
					##   The index starts from 0 and should not exceed nbTypes-1.
					##   All n(z) histogram needs to have the same redshift bins as defined by bin_z_map
					##   Have to be ASCII files
					##   Have to be put after nbTypes

n_gal		0.3  0.6
					## [float array | arcmin^-2] Galaxy number densities
					##   The k-th value for type k galaxies
					##   The length should be nbTypes.

################################################################################
## 4. Lensing & outputs

doNoise		1			## [int] 0 = no, 1 = yes, 2 = output both
doWgt		1			## [int] 0 = no, 1 = yes
signConv	1			## [int] 0 = athena, 1 = treecorr

sigma_eps	0  0.29
					## [float array] Ellipticity dispersion, sigma_eps^2 = 0.5 * (<epsilon_1^2> + <epsilon_2^2>) = sigma_kappa^2
					##   The k-th value for type k galaxies
					##   The length should be nbTypes.
					##   Ignored if doNoise = 0

doLensing	0  1
					## [int array] 0 = no, 1 = yes
					##   The k-th value for type k galaxies
					##   The length should be nbTypes.

outPrefix	../data/mockFootprint/anser/MFP_galCat/galCat
					## [string] Prefix for output files
					##   Output file names are "%s%s%s.fits" % (outPrefix, runTag, fileTag) where fileTag is generated automatically.

outStyle	64			## [int] Output style
					##    1 = all galaxies in one file
					##    2 = two files, one w/ lensing, one w/o
					##   64 = one file per type

################################################################################
## 5. Variable depth

doVariableDepth		0		## [int] 0 = no, 1 = apply the below settings

nbDepthMaps	0			## [int] Number of depth maps
#depthMapPath	0	-
#depthMapPath	1	-
					## [1 int, 1 string] Index of type and path to depth map for that type

N_depth		0			## [int] Number of depth bins
bin_depth	
					## [int] Bin edge values for depth bins

nbTomo		0			## [int] Number of tomographic bins
a_n_gal		
					## [int array] Slope parameters for n_gal = a*depth + b
					##   The k-th value for the k-th tomographic bin
b_n_gal		
					## [int array] Intercept parameters for n_gal = a*depth + b
					##   The k-th value for the k-th tomographic bin
a_sigma_eps	
					## [int array] Slope parameters for sigma_eps = a*depth + b
					##   The k-th value for the k-th tomographic bin
b_sigma_eps	
					## [int array] Intercept parameters for sigma_eps = a*depth + b
					##   The k-th value for the k-th tomographic bin

#VD_nOfZPath	0	-
#VD_nOfZPath	1	-
					## [1 int, 1 string] Path to variable depth n(z)
					##   index = ind_depth + ind_tomo * N_depth

################################################################################

